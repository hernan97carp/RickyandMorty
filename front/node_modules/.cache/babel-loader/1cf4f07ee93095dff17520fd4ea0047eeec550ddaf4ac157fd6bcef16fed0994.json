{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cualquiera\\\\Desktop\\\\react\\\\rick and morty\\\\src\\\\components\\\\SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./stylesheet/searchBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = _ref => {\n  _s();\n  let {\n    onSearch\n  } = _ref;\n  // tb puedo usar props y en la variable props.onSearch\n\n  const [id, setId] = useState('');\n  const handleChange = event => {\n    setId(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"menuDeNavegacion\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        value: id,\n        onChange: handleChange,\n        placeholder: \"Ingrese id del personaje...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          onSearch(id);\n          setId('');\n        },\n        children: \"Agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 10\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n};\n_s(SearchBar, \"HQhLVNjveXBilLE1Zdd8jTOIPME=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SearchBar","_ref","_s","onSearch","id","setId","handleChange","event","target","value","children","className","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Cualquiera/Desktop/react/rick and morty/src/components/SearchBar.jsx"],"sourcesContent":["import {useState} from \"react\";\r\nimport \"./stylesheet/searchBar.css\"\r\n\r\nconst SearchBar = ({onSearch})=> {   // tb puedo usar props y en la variable props.onSearch\r\n   \r\n   const [id, setId] = useState('')\r\n\r\n   const handleChange = (event) => {\r\n      setId(event.target.value)\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <nav className=\"menuDeNavegacion\">\r\n         <input type='search' value={id} onChange={handleChange} placeholder=\"Ingrese id del personaje...\" />\r\n         <button onClick= {() => {onSearch(id); setId('')}}>Agregar</button>  {/*//cuando necesito pasar un argumento a una funcion tengo q hacerlo con un cb, sino se va a ejecutar la funcion*/}\r\n      </nav>\r\n   </div>)\r\n   ;\r\n}\r\n\r\nexport default SearchBar"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAO,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,SAAS,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAAQ;;EAElC,MAAM,CAACG,EAAE,EAAEC,KAAK,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhC,MAAMS,YAAY,GAAIC,KAAK,IAAK;IAC7BF,KAAK,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,oBACGV,OAAA;IAAAW,QAAA,eACGX,OAAA;MAAKY,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBACjCX,OAAA;QAAOa,IAAI,EAAC,QAAQ;QAACH,KAAK,EAAEL,EAAG;QAACS,QAAQ,EAAEP,YAAa;QAACQ,WAAW,EAAC;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACpGnB,OAAA;QAAQoB,OAAO,EAAGA,CAAA,KAAM;UAAChB,QAAQ,CAACC,EAAE,CAAC;UAAEC,KAAK,CAAC,EAAE,CAAC;QAAA,CAAE;QAAAK,QAAA,EAAC;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,MAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAClE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAET,CAAC;AAAAhB,EAAA,CAhBKF,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAkBf,eAAeA,SAAS;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}