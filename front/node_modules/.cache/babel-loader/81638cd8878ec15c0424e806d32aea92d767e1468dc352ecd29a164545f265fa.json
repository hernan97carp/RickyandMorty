{"ast":null,"code":"const validation = userData => {\n  let errors = {};\n  let strongPassword = new RegExp('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,})');\n  if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(userData.username)) {\n    errors.username = \"El email es invalido\";\n  }\n  if (!userData.username) {\n    errors.username = \"Este campo no puede estar vacio\";\n  }\n  if (userData.username.length > 35) {\n    errors.username = \"El email no puede superar los 35 caracteres\";\n  }\n  if (!userData.password.test(strongPassword)) {\n    errors.password = \"La contrase単a debe tener al menos un numero\";\n  }\n  if (userData.password.length < 6 || userData.password.length > 10) {\n    errors.password = \"La contrase単a debe contener entre 6 y 10 caracteres\";\n  }\n  return errors;\n};\nexport default validation;","map":{"version":3,"names":["validation","userData","errors","strongPassword","RegExp","test","username","length","password"],"sources":["C:/Users/Cualquiera/Desktop/react/rick and morty/src/components/validation.js"],"sourcesContent":["const validation = (userData) =>{\r\n    let errors= {}\r\n    let strongPassword = new RegExp('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,})')\r\n    if(!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(userData.username)){\r\n        errors.username = \"El email es invalido\";\r\n    }\r\n    if(!userData.username){\r\n        errors.username = \"Este campo no puede estar vacio\";\r\n    }\r\n    if(userData.username.length > 35){\r\n        errors.username = \"El email no puede superar los 35 caracteres\";\r\n    }\r\n\r\n    if(!userData.password.test(strongPassword)){\r\n        errors.password= \"La contrase単a debe tener al menos un numero\";\r\n    \r\n    }\r\n    if(userData.password.length < 6 || userData.password.length > 10){\r\n        errors.password= \"La contrase単a debe contener entre 6 y 10 caracteres\"\r\n    }\r\n    return errors;\r\n    }\r\n    export default validation;"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,QAAQ,IAAI;EAC5B,IAAIC,MAAM,GAAE,CAAC,CAAC;EACd,IAAIC,cAAc,GAAG,IAAIC,MAAM,CAAC,8DAA8D,CAAC;EAC/F,IAAG,CAAC,4BAA4B,CAACC,IAAI,CAACJ,QAAQ,CAACK,QAAQ,CAAC,EAAC;IACrDJ,MAAM,CAACI,QAAQ,GAAG,sBAAsB;EAC5C;EACA,IAAG,CAACL,QAAQ,CAACK,QAAQ,EAAC;IAClBJ,MAAM,CAACI,QAAQ,GAAG,iCAAiC;EACvD;EACA,IAAGL,QAAQ,CAACK,QAAQ,CAACC,MAAM,GAAG,EAAE,EAAC;IAC7BL,MAAM,CAACI,QAAQ,GAAG,6CAA6C;EACnE;EAEA,IAAG,CAACL,QAAQ,CAACO,QAAQ,CAACH,IAAI,CAACF,cAAc,CAAC,EAAC;IACvCD,MAAM,CAACM,QAAQ,GAAE,6CAA6C;EAElE;EACA,IAAGP,QAAQ,CAACO,QAAQ,CAACD,MAAM,GAAG,CAAC,IAAIN,QAAQ,CAACO,QAAQ,CAACD,MAAM,GAAG,EAAE,EAAC;IAC7DL,MAAM,CAACM,QAAQ,GAAE,qDAAqD;EAC1E;EACA,OAAON,MAAM;AACb,CAAC;AACD,eAAeF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}